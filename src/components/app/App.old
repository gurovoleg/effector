import React from 'react';
import {createStore, createEvent, createEffect, forward } from 'effector';
import { useStore, createGate, useGate } from "effector-react"

// const users = [{ name: 'Oleg', age: 42, id: 1 }, { name: 'Olga', age: 18, id: 2 }];

const addUser = createEvent();
const deleteUser = createEvent();
const resetStore = createEvent();
const loadUsers = createEvent();

const getUsersFx = createEffect(async () => {
  console.log('FX');
  const res = await fetch('https://jsonplaceholder.typicode.com/users');
  const data = await res.json()
  console.log('FX', data);
  return data;
});

const $users = createStore([]);
$users.on(deleteUser, (users, id) => users.filter(user => user.id !== id));
$users.reset(resetStore);
$users.on(addUser, (state, name) => {
  const id = (state[state.length - 1].id + 1) || 1;
  return [...state, { name, age: Math.floor(Math.random() * (50 - 20 + 1)) + 20, id }]
});

$users.on(getUsersFx.doneData, (state, result) => {
  console.log('getUsersFx.done');
  return [...state, ...result];
})

const getInputText = createEvent();

const $inputText = createStore('');
$inputText.on(getInputText, (state, name) => name);

const Gate = createGate();

// We getUsersFx effect every time Gate updates its state.
// Its the same as Gate.open.watch(getUsersFx);
// Gate.open.watch(() => {
//   //called each time when TodoGate is mounted
// })
// Gate.close.watch(() => {
//   //called each time when TodoGate is unmounted
// })
forward({
  from: Gate.open,
  to: getUsersFx
})

function App() {
  const users = useStore($users);
  const inputText = useStore($inputText);
  useGate(Gate);

  console.log('RENDER', users)

  return (
    <div>
      <h1>Main page</h1>
      <input type="text" placeholder="Add username" onChange={(e) => getInputText(e.target.value)} value={inputText}/>
      <button onClick={() => addUser(inputText)} disabled={!inputText}>Add new user</button>
      <button onClick={() => resetStore()}>Reset store</button>
      <button onClick={() => getUsersFx()}>Load store</button>
      {users.map(user => (
        <div key={user.id} style={{ padding: '20px 40px' }}>
          <div><strong>id:</strong> {user.id}</div>
          <div><strong>name:</strong> {user.name}</div>
          <div><strong>email:</strong> {user.email}</div>
          <div><strong>phone:</strong> {user.phone}</div>
          <button onClick={() => deleteUser(user.id)}>Delete</button>
        </div>
      ))}
    </div>
  );
}

export default App;
